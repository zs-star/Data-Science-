<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20212.21.0712.0907                               -->
<workbook original-version='18.1' source-build='2021.2.1 (20212.21.0712.0907)' source-platform='win' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <repository-location id='GlobalCovidInformation_Story' path='/workbooks' revision='1.1' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Death or Positive Cases' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Death &amp; New&quot;'>
        <calculation class='tableau' formula='&quot;Death &amp; New&quot;' />
        <members>
          <member value='&quot; Death &amp; Total&quot;' />
          <member value='&quot;Death &amp; New&quot;' />
          <member value='&quot;Positive &amp; Total&quot;' />
          <member value='&quot;Positive &amp; New&quot;' />
        </members>
      </column>
    </datasource>
    <datasource caption='Sheet0 (covid-19-case-counts-QueryResult)' inline='true' name='federated.11xy8zp04oj3f81glt82112eabvx' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='covid-19-case-counts-QueryResult' name='excel-direct.12wf3z21n0agyx172k3mg1dn89d2'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/admin/Desktop/CLARUSWAY_DOKUMANLARI/DATASCIENCE/Local_Clarusway-DS-Students-08-2/Clarusway-DS-Students-08-21/1- Projects/05_C8_DS_DVwTableau_M2_(Covid-19 Dashboard)/covid-19-case-counts-QueryResult.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.12wf3z21n0agyx172k3mg1dn89d2' name='Sheet0' table='[Sheet0$]' type='table'>
          <columns gridOrigin='A1:M10001:no:A1:M10001:0' header='yes' outcome='6'>
            <column datatype='integer' name='people_positive_cases_count' ordinal='0' />
            <column datatype='string' name='county_name' ordinal='1' />
            <column datatype='string' name='province_state_name' ordinal='2' />
            <column datatype='string' name='report_date' ordinal='3' />
            <column datatype='string' name='continent_name' ordinal='4' />
            <column datatype='string' name='data_source_name' ordinal='5' />
            <column datatype='integer' name='people_death_new_count' ordinal='6' />
            <column datatype='integer' name='county_fips_number' ordinal='7' />
            <column datatype='string' name='country_alpha_3_code' ordinal='8' />
            <column datatype='string' name='country_short_name' ordinal='9' />
            <column datatype='string' name='country_alpha_2_code' ordinal='10' />
            <column datatype='integer' name='people_positive_new_cases_count' ordinal='11' />
            <column datatype='integer' name='people_death_count' ordinal='12' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.12wf3z21n0agyx172k3mg1dn89d2' name='Sheet0' table='[Sheet0$]' type='table'>
          <columns gridOrigin='A1:M10001:no:A1:M10001:0' header='yes' outcome='6'>
            <column datatype='integer' name='people_positive_cases_count' ordinal='0' />
            <column datatype='string' name='county_name' ordinal='1' />
            <column datatype='string' name='province_state_name' ordinal='2' />
            <column datatype='string' name='report_date' ordinal='3' />
            <column datatype='string' name='continent_name' ordinal='4' />
            <column datatype='string' name='data_source_name' ordinal='5' />
            <column datatype='integer' name='people_death_new_count' ordinal='6' />
            <column datatype='integer' name='county_fips_number' ordinal='7' />
            <column datatype='string' name='country_alpha_3_code' ordinal='8' />
            <column datatype='string' name='country_short_name' ordinal='9' />
            <column datatype='string' name='country_alpha_2_code' ordinal='10' />
            <column datatype='integer' name='people_positive_new_cases_count' ordinal='11' />
            <column datatype='integer' name='people_death_count' ordinal='12' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet0]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:M10001:no:A1:M10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_positive_cases_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[people_positive_cases_count]</local-name>
            <parent-name>[Sheet0]</parent-name>
            <remote-alias>people_positive_cases_count</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet0_2B60EB7579D741BABAA6C58C5A26A331]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>county_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[county_name]</local-name>
            <parent-name>[Sheet0]</parent-name>
            <remote-alias>county_name</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet0_2B60EB7579D741BABAA6C58C5A26A331]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>province_state_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[province_state_name]</local-name>
            <parent-name>[Sheet0]</parent-name>
            <remote-alias>province_state_name</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet0_2B60EB7579D741BABAA6C58C5A26A331]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>report_date</remote-name>
            <remote-type>130</remote-type>
            <local-name>[report_date]</local-name>
            <parent-name>[Sheet0]</parent-name>
            <remote-alias>report_date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet0_2B60EB7579D741BABAA6C58C5A26A331]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>continent_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[continent_name]</local-name>
            <parent-name>[Sheet0]</parent-name>
            <remote-alias>continent_name</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet0_2B60EB7579D741BABAA6C58C5A26A331]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>data_source_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[data_source_name]</local-name>
            <parent-name>[Sheet0]</parent-name>
            <remote-alias>data_source_name</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet0_2B60EB7579D741BABAA6C58C5A26A331]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_death_new_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[people_death_new_count]</local-name>
            <parent-name>[Sheet0]</parent-name>
            <remote-alias>people_death_new_count</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet0_2B60EB7579D741BABAA6C58C5A26A331]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>county_fips_number</remote-name>
            <remote-type>20</remote-type>
            <local-name>[county_fips_number]</local-name>
            <parent-name>[Sheet0]</parent-name>
            <remote-alias>county_fips_number</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet0_2B60EB7579D741BABAA6C58C5A26A331]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country_alpha_3_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[country_alpha_3_code]</local-name>
            <parent-name>[Sheet0]</parent-name>
            <remote-alias>country_alpha_3_code</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet0_2B60EB7579D741BABAA6C58C5A26A331]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country_short_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[country_short_name]</local-name>
            <parent-name>[Sheet0]</parent-name>
            <remote-alias>country_short_name</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet0_2B60EB7579D741BABAA6C58C5A26A331]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country_alpha_2_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[country_alpha_2_code]</local-name>
            <parent-name>[Sheet0]</parent-name>
            <remote-alias>country_alpha_2_code</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet0_2B60EB7579D741BABAA6C58C5A26A331]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_positive_new_cases_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[people_positive_new_cases_count]</local-name>
            <parent-name>[Sheet0]</parent-name>
            <remote-alias>people_positive_new_cases_count</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet0_2B60EB7579D741BABAA6C58C5A26A331]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_death_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[people_death_count]</local-name>
            <parent-name>[Sheet0]</parent-name>
            <remote-alias>people_death_count</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet0_2B60EB7579D741BABAA6C58C5A26A331]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Death or Positive' datatype='integer' name='[Calculation_243194392747323392]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Parameters].[Parameter 1]=&apos;Death &amp; New&apos; THEN  [people_death_new_count]&#13;&#10;ELSEIF [Parameters].[Parameter 1]=&apos;Death &amp; Total&apos; THEN[people_death_count]&#13;&#10;ELSEIF [Parameters].[Parameter 1]=&apos;Positive &amp; Total&apos; THEN[people_positive_cases_count]&#13;&#10;ELSE[people_positive_new_cases_count] END' />
      </column>
      <column caption='Fixed total Death' datatype='integer' name='[Calculation_243194392764125186]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [country_short_name]:SUM([people_death_count])}' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='Sheet0' datatype='table' name='[__tableau_internal_object_id__].[Sheet0_2B60EB7579D741BABAA6C58C5A26A331]' role='measure' type='quantitative' />
      <column caption='Continent Name' datatype='string' name='[continent_name]' role='dimension' type='nominal' />
      <column caption='Country Alpha 2 Code' datatype='string' name='[country_alpha_2_code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Country Alpha 3 Code' datatype='string' name='[country_alpha_3_code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Country Short Name' datatype='string' name='[country_short_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='County Fips Number' datatype='integer' name='[county_fips_number]' role='dimension' type='ordinal' />
      <column caption='County Name' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='Data Source Name' datatype='string' name='[data_source_name]' role='dimension' type='nominal' />
      <column caption='People Death Count' datatype='integer' name='[people_death_count]' role='measure' type='quantitative' />
      <column caption='People Death New Count' datatype='integer' name='[people_death_new_count]' role='measure' type='quantitative' />
      <column caption='People Positive Cases Count' datatype='integer' name='[people_positive_cases_count]' role='measure' type='quantitative' />
      <column caption='People Positive New Cases Count' datatype='integer' name='[people_positive_new_cases_count]' role='measure' type='quantitative' />
      <column caption='Province State Name' datatype='string' name='[province_state_name]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Report Date' datatype='string' name='[report_date]' role='dimension' type='nominal' />
      <column-instance column='[country_short_name]' derivation='None' name='[none:country_short_name:nk]' pivot='key' type='nominal' />
      <column-instance column='[people_death_count]' derivation='Sum' name='[sum:people_death_count:qk]' pivot='key' type='quantitative' />
      <column-instance column='[people_death_new_count]' derivation='Sum' name='[sum:people_death_new_count:qk]' pivot='key' type='quantitative' />
      <column-instance column='[people_positive_cases_count]' derivation='Sum' name='[sum:people_positive_cases_count:qk]' pivot='key' type='quantitative' />
      <column-instance column='[people_positive_new_cases_count]' derivation='Sum' name='[sum:people_positive_new_cases_count:qk]' pivot='key' type='quantitative' />
      <group caption='Action (Country Short Name)' hidden='true' name='[Action (Country Short Name)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[country_short_name]' />
        </groupfilter>
      </group>
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/admin/Documents/My Tableau Repository/Datasources/Sheet0 (covid-19-case-counts-QueryResult).hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='09/02/2021 09:07:25 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='Sheet0 (covid-19-case-counts-QueryResult)' increment-value='%null%' refresh-type='create' rows-inserted='315861' timestamp-start='2021-09-02 09:07:25.652' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>people_positive_cases_count</remote-name>
              <remote-type>20</remote-type>
              <local-name>[people_positive_cases_count]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>people_positive_cases_count</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet0</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>46139</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet0_2B60EB7579D741BABAA6C58C5A26A331]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>county_name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[county_name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>county_name</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet0</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>8100</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet0_2B60EB7579D741BABAA6C58C5A26A331]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>province_state_name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[province_state_name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>province_state_name</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet0</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>232</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet0_2B60EB7579D741BABAA6C58C5A26A331]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>report_date</remote-name>
              <remote-type>129</remote-type>
              <local-name>[report_date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>report_date</remote-alias>
              <ordinal>3</ordinal>
              <family>Sheet0</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>89</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet0_2B60EB7579D741BABAA6C58C5A26A331]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>continent_name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[continent_name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>continent_name</remote-alias>
              <ordinal>4</ordinal>
              <family>Sheet0</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet0_2B60EB7579D741BABAA6C58C5A26A331]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>data_source_name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[data_source_name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>data_source_name</remote-alias>
              <ordinal>5</ordinal>
              <family>Sheet0</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet0_2B60EB7579D741BABAA6C58C5A26A331]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>people_death_new_count</remote-name>
              <remote-type>20</remote-type>
              <local-name>[people_death_new_count]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>people_death_new_count</remote-alias>
              <ordinal>6</ordinal>
              <family>Sheet0</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>730</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet0_2B60EB7579D741BABAA6C58C5A26A331]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>county_fips_number</remote-name>
              <remote-type>20</remote-type>
              <local-name>[county_fips_number]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>county_fips_number</remote-alias>
              <ordinal>7</ordinal>
              <family>Sheet0</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>20217</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet0_2B60EB7579D741BABAA6C58C5A26A331]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>country_alpha_3_code</remote-name>
              <remote-type>129</remote-type>
              <local-name>[country_alpha_3_code]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>country_alpha_3_code</remote-alias>
              <ordinal>8</ordinal>
              <family>Sheet0</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1964</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet0_2B60EB7579D741BABAA6C58C5A26A331]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>country_short_name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[country_short_name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>country_short_name</remote-alias>
              <ordinal>9</ordinal>
              <family>Sheet0</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2123</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet0_2B60EB7579D741BABAA6C58C5A26A331]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>country_alpha_2_code</remote-name>
              <remote-type>129</remote-type>
              <local-name>[country_alpha_2_code]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>country_alpha_2_code</remote-alias>
              <ordinal>10</ordinal>
              <family>Sheet0</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1964</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet0_2B60EB7579D741BABAA6C58C5A26A331]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>people_positive_new_cases_count</remote-name>
              <remote-type>20</remote-type>
              <local-name>[people_positive_new_cases_count]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>people_positive_new_cases_count</remote-alias>
              <ordinal>11</ordinal>
              <family>Sheet0</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2134</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet0_2B60EB7579D741BABAA6C58C5A26A331]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>people_death_count</remote-name>
              <remote-type>20</remote-type>
              <local-name>[people_death_count]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>people_death_count</remote-alias>
              <ordinal>12</ordinal>
              <family>Sheet0</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3834</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet0_2B60EB7579D741BABAA6C58C5A26A331]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:country_short_name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Falkland Islands (Malvinas)&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Korea, South&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bonaire, Sint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Burma&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Summer Olympics 2020&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Faroe Islands&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;West Bank and Gaza&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Channel Islands&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sint Maarten&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Congo (Brazzaville)&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Saint Barthelemy&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;French Guiana&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Micronesia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Taiwan*&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Holy See&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Saint Pierre and Miquelon&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;St Martin&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Congo (Kinshasa)&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saint Helena, Ascension and Tristan da Cunha&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Reunion&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mayotte&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#49525e'>
              <bucket>&quot;[federated.11xy8zp04oj3f81glt82112eabvx].[sum:people_positive_new_cases_count:qk]&quot;</bucket>
            </map>
            <map to='#758087'>
              <bucket>&quot;[federated.11xy8zp04oj3f81glt82112eabvx].[sum:people_positive_cases_count:qk]&quot;</bucket>
            </map>
            <map to='#9ca3a4'>
              <bucket>&quot;[federated.11xy8zp04oj3f81glt82112eabvx].[sum:people_death_new_count:qk]&quot;</bucket>
            </map>
            <map to='#cdcecd'>
              <bucket>&quot;[federated.11xy8zp04oj3f81glt82112eabvx].[sum:people_death_count:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Turkey&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Death or Positive Cases' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Death &amp; New&quot;'>
          <calculation class='tableau' formula='&quot;Death &amp; New&quot;' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet0' id='Sheet0_2B60EB7579D741BABAA6C58C5A26A331'>
            <properties context=''>
              <relation connection='excel-direct.12wf3z21n0agyx172k3mg1dn89d2' name='Sheet0' table='[Sheet0$]' type='table'>
                <columns gridOrigin='A1:M10001:no:A1:M10001:0' header='yes' outcome='6'>
                  <column datatype='integer' name='people_positive_cases_count' ordinal='0' />
                  <column datatype='string' name='county_name' ordinal='1' />
                  <column datatype='string' name='province_state_name' ordinal='2' />
                  <column datatype='string' name='report_date' ordinal='3' />
                  <column datatype='string' name='continent_name' ordinal='4' />
                  <column datatype='string' name='data_source_name' ordinal='5' />
                  <column datatype='integer' name='people_death_new_count' ordinal='6' />
                  <column datatype='integer' name='county_fips_number' ordinal='7' />
                  <column datatype='string' name='country_alpha_3_code' ordinal='8' />
                  <column datatype='string' name='country_short_name' ordinal='9' />
                  <column datatype='string' name='country_alpha_2_code' ordinal='10' />
                  <column datatype='integer' name='people_positive_new_cases_count' ordinal='11' />
                  <column datatype='integer' name='people_death_count' ordinal='12' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter1' name='[Action2_2C2E991813D4493A9F680B6BAE922B6F]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Global Death Count' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Global Death Count,Percentage ' />
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Highlight 1 (generated)' name='[Action2_FF0C8F78EAFE4AB490621E255DB68EBA]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Per Country' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Measure Names' />
        <param name='target' value='Per Country' />
      </command>
    </action>
    <action caption='Filter2' name='[Action3_C05BA0A4B6084C3B889FDBA53D980C8A]'>
      <activation auto-clear='true' type='on-hover' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Percentage ' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Percentage ,Per Country' />
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Global Death Count'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet0 (covid-19-case-counts-QueryResult)' name='federated.11xy8zp04oj3f81glt82112eabvx' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Death or Positive Cases' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Death &amp; New&quot;'>
              <calculation class='tableau' formula='&quot;Death &amp; New&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.11xy8zp04oj3f81glt82112eabvx'>
            <column caption='Death or Positive' datatype='integer' name='[Calculation_243194392747323392]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1]=&apos;Death &amp; New&apos; THEN  [people_death_new_count]&#13;&#10;ELSEIF [Parameters].[Parameter 1]=&apos;Death &amp; Total&apos; THEN[people_death_count]&#13;&#10;ELSEIF [Parameters].[Parameter 1]=&apos;Positive &amp; Total&apos; THEN[people_positive_cases_count]&#13;&#10;ELSE[people_positive_new_cases_count] END' />
            </column>
            <column caption='Country Short Name' datatype='string' name='[country_short_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country_short_name]' derivation='None' name='[none:country_short_name:nk]' pivot='key' type='nominal' />
            <column caption='People Death Count' datatype='integer' name='[people_death_count]' role='measure' type='quantitative' />
            <column caption='People Death New Count' datatype='integer' name='[people_death_new_count]' role='measure' type='quantitative' />
            <column caption='People Positive Cases Count' datatype='integer' name='[people_positive_cases_count]' role='measure' type='quantitative' />
            <column caption='People Positive New Cases Count' datatype='integer' name='[people_positive_new_cases_count]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_243194392747323392]' derivation='Sum' name='[sum:Calculation_243194392747323392:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.11xy8zp04oj3f81glt82112eabvx].[Action (Country Short Name)]'>
            <groupfilter function='level-members' level='[country_short_name]' user:ui-action-filter='[Action3_C05BA0A4B6084C3B889FDBA53D980C8A]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.11xy8zp04oj3f81glt82112eabvx].[Action (Country Short Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.11xy8zp04oj3f81glt82112eabvx].[Longitude (generated)]' field-type='quantitative' max='31678308.293923639' min='-24337827.296907146' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.11xy8zp04oj3f81glt82112eabvx].[Latitude (generated)]' field-type='quantitative' max='19277081.264215857' min='-10086842.02413765' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='dark' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.11xy8zp04oj3f81glt82112eabvx].[none:country_short_name:nk]' />
              <size column='[federated.11xy8zp04oj3f81glt82112eabvx].[sum:Calculation_243194392747323392:qk]' />
              <tooltip column='[Parameters].[Parameter 1]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Country Short Name:&#9;</run>
                <run bold='true'><![CDATA[<[federated.11xy8zp04oj3f81glt82112eabvx].[none:country_short_name:nk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true'>&lt;[Parameters].[Parameter 1]&gt;</run>
                <run bold='true' fontcolor='#787878'>:</run>
                <run fontcolor='#787878'>Æ&#9;</run>
                <run bold='true'><![CDATA[<[federated.11xy8zp04oj3f81glt82112eabvx].[sum:Calculation_243194392747323392:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Æ&#9;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/times' />
                <format attr='size' value='1.5052486658096313' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.11xy8zp04oj3f81glt82112eabvx].[Latitude (generated)]</rows>
        <cols>[federated.11xy8zp04oj3f81glt82112eabvx].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{A117C068-1331-4071-9736-6CFBF90DF54F}' />
    </worksheet>
    <worksheet name='Per Country'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#000000'>Selected Country information</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet0 (covid-19-case-counts-QueryResult)' name='federated.11xy8zp04oj3f81glt82112eabvx' />
          </datasources>
          <datasource-dependencies datasource='federated.11xy8zp04oj3f81glt82112eabvx'>
            <column caption='Country Short Name' datatype='string' name='[country_short_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country_short_name]' derivation='None' name='[none:country_short_name:nk]' pivot='key' type='nominal' />
            <column caption='People Death Count' datatype='integer' name='[people_death_count]' role='measure' type='quantitative' />
            <column caption='People Death New Count' datatype='integer' name='[people_death_new_count]' role='measure' type='quantitative' />
            <column caption='People Positive Cases Count' datatype='integer' name='[people_positive_cases_count]' role='measure' type='quantitative' />
            <column caption='People Positive New Cases Count' datatype='integer' name='[people_positive_new_cases_count]' role='measure' type='quantitative' />
            <column-instance column='[people_death_count]' derivation='Sum' name='[sum:people_death_count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[people_death_new_count]' derivation='Sum' name='[sum:people_death_new_count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[people_positive_cases_count]' derivation='Sum' name='[sum:people_positive_cases_count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[people_positive_new_cases_count]' derivation='Sum' name='[sum:people_positive_new_cases_count:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.11xy8zp04oj3f81glt82112eabvx].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.11xy8zp04oj3f81glt82112eabvx].[sum:people_death_count:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.11xy8zp04oj3f81glt82112eabvx].[sum:people_death_new_count:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.11xy8zp04oj3f81glt82112eabvx].[sum:people_positive_cases_count:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.11xy8zp04oj3f81glt82112eabvx].[sum:people_positive_new_cases_count:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.11xy8zp04oj3f81glt82112eabvx].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.11xy8zp04oj3f81glt82112eabvx].[sum:people_positive_cases_count:qk]&quot;</bucket>
              <bucket>&quot;[federated.11xy8zp04oj3f81glt82112eabvx].[sum:people_death_count:qk]&quot;</bucket>
              <bucket>&quot;[federated.11xy8zp04oj3f81glt82112eabvx].[sum:people_positive_new_cases_count:qk]&quot;</bucket>
              <bucket>&quot;[federated.11xy8zp04oj3f81glt82112eabvx].[sum:people_death_new_count:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.11xy8zp04oj3f81glt82112eabvx].[Action (Country Short Name)]'>
            <groupfilter function='level-members' level='[country_short_name]' user:ui-action-filter='[Action2_2C2E991813D4493A9F680B6BAE922B6F]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.11xy8zp04oj3f81glt82112eabvx].[none:country_short_name:nk]'>
            <groupfilter function='level-members' level='[none:country_short_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.11xy8zp04oj3f81glt82112eabvx].[none:country_short_name:nk]</column>
            <column>[federated.11xy8zp04oj3f81glt82112eabvx].[:Measure Names]</column>
            <column>[federated.11xy8zp04oj3f81glt82112eabvx].[Action (Country Short Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='field-labels'>
            <format attr='background-color' value='#e6e6e6' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.11xy8zp04oj3f81glt82112eabvx].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.11xy8zp04oj3f81glt82112eabvx].[none:country_short_name:nk] / [federated.11xy8zp04oj3f81glt82112eabvx].[:Measure Names])</rows>
        <cols>[federated.11xy8zp04oj3f81glt82112eabvx].[Multiple Values]</cols>
      </table>
      <simple-id uuid='{660B26B2-6037-46EE-93F1-66B481DE38B2}' />
    </worksheet>
    <worksheet name='Percentage '>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet0 (covid-19-case-counts-QueryResult)' name='federated.11xy8zp04oj3f81glt82112eabvx' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Death or Positive Cases' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Death &amp; New&quot;'>
              <calculation class='tableau' formula='&quot;Death &amp; New&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.11xy8zp04oj3f81glt82112eabvx'>
            <column caption='Death or Positive' datatype='integer' name='[Calculation_243194392747323392]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1]=&apos;Death &amp; New&apos; THEN  [people_death_new_count]&#13;&#10;ELSEIF [Parameters].[Parameter 1]=&apos;Death &amp; Total&apos; THEN[people_death_count]&#13;&#10;ELSEIF [Parameters].[Parameter 1]=&apos;Positive &amp; Total&apos; THEN[people_positive_cases_count]&#13;&#10;ELSE[people_positive_new_cases_count] END' />
            </column>
            <column caption='Country Short Name' datatype='string' name='[country_short_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country_short_name]' derivation='None' name='[none:country_short_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_243194392747323392]' derivation='Sum' name='[pcto:sum:Calculation_243194392747323392:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column caption='People Death Count' datatype='integer' name='[people_death_count]' role='measure' type='quantitative' />
            <column caption='People Death New Count' datatype='integer' name='[people_death_new_count]' role='measure' type='quantitative' />
            <column caption='People Positive Cases Count' datatype='integer' name='[people_positive_cases_count]' role='measure' type='quantitative' />
            <column caption='People Positive New Cases Count' datatype='integer' name='[people_positive_new_cases_count]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_243194392747323392]' derivation='Sum' name='[sum:Calculation_243194392747323392:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.11xy8zp04oj3f81glt82112eabvx].[none:country_short_name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.11xy8zp04oj3f81glt82112eabvx].[sum:Calculation_243194392747323392:qk]' shelf='rows' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='149' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='10' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.11xy8zp04oj3f81glt82112eabvx].[sum:Calculation_243194392747323392:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[federated.11xy8zp04oj3f81glt82112eabvx].[sum:Calculation_243194392747323392:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#0b0103</color>
                <color>#1d050a</color>
                <color>#300c13</color>
                <color>#43161f</color>
                <color>#55242e</color>
                <color>#68343f</color>
                <color>#7b4852</color>
                <color>#8e5f68</color>
                <color>#a07880</color>
                <color>#b3959b</color>
                <color>#c6b5b9</color>
                <color>#d9d9d9</color>
                <color>#b8c0c6</color>
                <color>#99a8b3</color>
                <color>#7e91a0</color>
                <color>#657c8d</color>
                <color>#4f677a</color>
                <color>#3b5467</color>
                <color>#2a4254</color>
                <color>#1c3141</color>
                <color>#11222e</color>
                <color>#08131b</color>
                <color>#020609</color>
              </color-palette>
            </encoding>
            <encoding attr='size-bar' field='[federated.11xy8zp04oj3f81glt82112eabvx].[pcto:sum:Calculation_243194392747323392:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[federated.11xy8zp04oj3f81glt82112eabvx].[pcto:sum:Calculation_243194392747323392:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#0b0103</color>
                <color>#1d050a</color>
                <color>#300c13</color>
                <color>#43161f</color>
                <color>#55242e</color>
                <color>#68343f</color>
                <color>#7b4852</color>
                <color>#8e5f68</color>
                <color>#a07880</color>
                <color>#b3959b</color>
                <color>#c6b5b9</color>
                <color>#d9d9d9</color>
                <color>#b8c0c6</color>
                <color>#99a8b3</color>
                <color>#7e91a0</color>
                <color>#657c8d</color>
                <color>#4f677a</color>
                <color>#3b5467</color>
                <color>#2a4254</color>
                <color>#1c3141</color>
                <color>#11222e</color>
                <color>#08131b</color>
                <color>#020609</color>
              </color-palette>
            </encoding>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.11xy8zp04oj3f81glt82112eabvx].[sum:Calculation_243194392747323392:qk]' />
              <text column='[federated.11xy8zp04oj3f81glt82112eabvx].[pcto:sum:Calculation_243194392747323392:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='false' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.11xy8zp04oj3f81glt82112eabvx].[none:country_short_name:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{92D182E9-A173-44FD-9E54-AA24347A9B35}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet0 (covid-19-case-counts-QueryResult)' name='federated.11xy8zp04oj3f81glt82112eabvx' />
          </datasources>
          <datasource-dependencies datasource='federated.11xy8zp04oj3f81glt82112eabvx'>
            <column caption='Country Short Name' datatype='string' name='[country_short_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country_short_name]' derivation='None' name='[none:country_short_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[people_death_count]' derivation='Sum' name='[pcto:sum:people_death_count:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Table' type='PctTotal' />
            </column-instance>
            <column caption='People Death Count' datatype='integer' name='[people_death_count]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.11xy8zp04oj3f81glt82112eabvx].[pcto:sum:people_death_count:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.11xy8zp04oj3f81glt82112eabvx].[none:country_short_name:nk]</rows>
        <cols />
        <percentages enabled='true' mode='table' />
      </table>
      <simple-id uuid='{03AE36DC-7D7D-45AB-A569-1AB807A4FA52}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#e6e6e6' />
        </style-rule>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource name='Parameters' />
        <datasource caption='Sheet0 (covid-19-case-counts-QueryResult)' name='federated.11xy8zp04oj3f81glt82112eabvx' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Death or Positive Cases' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Death &amp; New&quot;'>
          <calculation class='tableau' formula='&quot;Death &amp; New&quot;' />
          <members>
            <member value='&quot; Death &amp; Total&quot;' />
            <member value='&quot;Death &amp; New&quot;' />
            <member value='&quot;Positive &amp; Total&quot;' />
            <member value='&quot;Positive &amp; New&quot;' />
          </members>
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.11xy8zp04oj3f81glt82112eabvx'>
        <column caption='Country Short Name' datatype='string' name='[country_short_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
        <column-instance column='[country_short_name]' derivation='None' name='[none:country_short_name:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='7' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone fixed-size='160' h='98000' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
              <zone h='4000' id='8' mode='compact' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='98400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='24' h='4000' id='11' is-fixed='true' name='Percentage ' pane-specification-id='0' param='[federated.11xy8zp04oj3f81glt82112eabvx].[sum:Calculation_243194392747323392:qk]' type-v2='color' w='98400' x='800' y='5000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='944' h='90000' id='13' is-fixed='true' mode='dropdown' name='Per Country' param='[federated.11xy8zp04oj3f81glt82112eabvx].[none:country_short_name:nk]' type-v2='filter' w='98400' x='800' y='9000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='52875' id='9' name='Global Death Count' w='72400' x='27300' y='10500'>
          <layout-cache minheight='244' type-h='scalable' type-w='fixed' />
        </zone>
        <zone h='52750' id='10' name='Percentage ' w='26800' x='400' y='10375'>
          <layout-cache fixed-size-h='4504' type-h='fixed' type-w='fixed' />
        </zone>
        <zone h='36500' id='12' name='Per Country' w='99900' x='-100' y='63375'>
          <layout-cache minheight='224' type-h='scalable' type-w='fixed' />
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1100' minheight='1100' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='25' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='24' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone h='4000' id='8' mode='compact' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='52750' id='10' is-fixed='true' name='Percentage ' w='26800' x='400' y='10375'>
                  <layout-cache fixed-size-h='4504' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='24' h='4000' id='11' name='Percentage ' pane-specification-id='0' param='[federated.11xy8zp04oj3f81glt82112eabvx].[sum:Calculation_243194392747323392:qk]' type-v2='color' w='98400' x='800' y='5000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='52875' id='9' is-fixed='true' name='Global Death Count' w='72400' x='27300' y='10500'>
                  <layout-cache minheight='244' type-h='scalable' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='944' h='90000' id='13' mode='dropdown' name='Per Country' param='[federated.11xy8zp04oj3f81glt82112eabvx].[none:country_short_name:nk]' type-v2='filter' w='98400' x='800' y='9000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='36500' id='12' is-fixed='true' name='Per Country' w='99900' x='-100' y='63375'>
                  <layout-cache minheight='224' type-h='scalable' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{E342A533-510F-41E8-8F2C-C0EFC81A3D20}' />
    </dashboard>
    <dashboard name='Story 1' type='storyboard'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#e6e6e6' />
        </style-rule>
        <style-rule element='story-description'>
          <format attr='background-color' value='#fffef5ad' />
        </style-rule>
        <style-rule element='story-point-caption'>
          <format attr='width' value='50' />
          <format attr='background-color' value='#e6e6e6' />
          <format attr='color' value='#e6e6e6' />
        </style-rule>
      </style>
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98340' id='1' param='vert' removable='false' type-v2='layout-flow' w='98426' x='787' y='830'>
            <zone fixed-size='79' h='8195' id='4' is-fixed='true' paired-zone-id='5' removable='false' type-v2='flipboard-nav' w='98426' x='787' y='830' />
            <zone h='90145' id='5' paired-zone-id='4' removable='false' type-v2='flipboard' w='98426' x='787' y='9025'>
              <flipboard active-id='3' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point captured-sheet='Dashboard 1' id='3'>
                    <currentDeltas>
                      <worksheet name='Global Death Count'>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.11xy8zp04oj3f81glt82112eabvx].[Latitude (generated)]' field-type='quantitative' max='15690413.833004642' min='-9320129.7808378711' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[federated.11xy8zp04oj3f81glt82112eabvx].[Longitude (generated)]' field-type='quantitative' max='25967031.055200566' min='-21744372.782619018' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                          </style-rule>
                        </style>
                      </worksheet>
                    </currentDeltas>
                    <capturedDeltas />
                  </story-point>
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{4CC41A46-8625-4EF3-A2DA-DC6B5F7C3547}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Global Death Count'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Parameter 1]</field>
            <field>[federated.11xy8zp04oj3f81glt82112eabvx].[none:country_short_name:nk]</field>
            <field>[federated.11xy8zp04oj3f81glt82112eabvx].[none:county_name:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{79B58B96-16E4-49BB-85D2-1DC3970F1AD5}' />
    </window>
    <window class='worksheet' name='Percentage '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.11xy8zp04oj3f81glt82112eabvx].[sum:Calculation_243194392747323392:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.11xy8zp04oj3f81glt82112eabvx].[none:country_short_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B536C1A3-1AA0-4FE7-96EE-5FA7F20C1A59}' />
    </window>
    <window class='worksheet' name='Per Country'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.11xy8zp04oj3f81glt82112eabvx].[none:country_short_name:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.11xy8zp04oj3f81glt82112eabvx].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.11xy8zp04oj3f81glt82112eabvx].[none:country_short_name:nk]</field>
            <field>[federated.11xy8zp04oj3f81glt82112eabvx].[none:county_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CE78F837-528B-472E-BBD2-F680DD97F4B1}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.11xy8zp04oj3f81glt82112eabvx].[none:country_short_name:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{B4DC7AC8-F188-4E63-90FA-5D6F6AF54299}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Global Death Count'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Per Country'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Percentage ' />
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{F0E04434-F56B-42C5-A657-BD684AB03EB3}' />
    </window>
    <window class='dashboard' name='Story 1'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{8BD20D9D-E844-4748-8AED-514643B73E03}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Global Death Count' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO29d5xkZ3km+pxY4VROnXtGI2lGKCKhgEEGhAgGDOaSk/HarI19je1ld+86
      8FuvfS++GNZejFmz9xrYIOCatQ3yArYwQhYGBAqjjMIEzUxPh6quHM45dfK5f1S/35yq7p7Y
      YaQ6z++nn3q6K5w69b3f94bnfV7uL/7iL/wHHngAIUKMI8QHHngAd9xxx25fR4gQuwJ+ty8g
      RIjdRGgAIcYaoQGEGGuEBhBirBEaQIixRmgAIcYaoQGEGGuEBhBirBEaQIixRmgAIcYaoQGE
      GGuEBhBirBEaQIixRmgAIcYaoQGEGGuEBhBirCHu9gXsFniehyAIu30ZIXYZY2sAyWQSs7Oz
      u30ZIXYZoQsUYqwRGkCIsUZoACHGGqEBhBhrhAYQYqwRGkCIsUZoAC8w+L4P3/d3+zKeNxjb
      OsALBZ7nwbIs9Ho9GIYB3/chSRJSqRREUYQsy+A4brcv86JFaADPU9BOX6lUoKoqbNtmf+M4
      Du12G4IgYO/evZBleRev9OJGaAA7BN/34boueH7gddKufK67s+/7UFUVnuexHd7zPPb3RCKB
      WCwG3/chyzLa7TZyuRxEMfyqN0J4V7YZvu+j3+/DsixUKhUUCgV0u10IggBZlpFOpxGNRplh
      nA6O46DVaqFWq4HjOESjUcRiMbiuCwBQFAWCIKBer8P3fXAcB57nEY1G2d9CDCM0gG2Gruso
      l8sAAFEU0Wg04LoufN+HIAiIxWKo1+vIZrNIJpObvg4Ftr7vI5lMIhKJoNvtotlsssdomrbu
      OZ7nYWlpCfF4HJOTk4hGo9vwKZ+/CA1gG0ALz3EcrKyswLKsDR/nui5WVlbYbi3LMiKRyLrX
      or/3+3228Hu9HrLZ7KavHXw+MDBEwzBCAxhBmAbdBliWhXK5DF3XmXtyOnAch263i5WVFfY7
      x3FgmiYAoNVqodVqwXVdVKtVpNNp+L6PZrN5VinPeDyOmZkZpFKp8/9QL1CEJ8AWgvz9fr+P
      TqeDbrcLURQ3NAKO41hg6jgOeJ5HoVCAZVlYXl6GYRjIZrOIxWLgOA7VahWFQgHZbBbVanXT
      a+A4DoVCAfF4HK7rQpZlSJIEx3HYNYZp0VMIDWCLYJom2u02Go0G+53v+0PpySCC2SBRFJHP
      51nWxnEcltlRVRU8z7Pdf2pqiv17FBzHoVQqwTAMNBoNeJ6HTCaDbDaL1dVV7N27F8DA4FzX
      hSiKF3VgTPdvO9O4oQFsAYLVV47jhtKSm8F1XXieh2QyiWKxiEgkgn6/j3q9DkmSAACGYQwF
      tr7vo9FobLqD+76PWq3G3j+XyyEWi2FpaQmSJMG2bQiCgEajgWazCVEUsXfvXvZ+FyNGT8mz
      yZad0+tv6auNIXzfR6/Xg6IoiMViEAQBoiiu2/0pJclxHHNHOI6D67pQVZUFv77vs8B2NKsD
      gMUFmyFofJqmod1us5OgWq2i3+8z47Nt+6yMdbcQzHzRSXW+LtzoBkWGFAbBFwDf92GaJsvK
      yLKMYrGI2dnZoUJXJBJBLBYDALb4gcFipVrA0tISTNPc0oKVaZqsYOb7PrrdLizLguu6EAQB
      hULhoqkS0ylKC9VxHBiGAdu2Yds2u/7TGezpeFD0PE3TsLCwwDaS0AAuEJqmQdd1lqL0fR+a
      poHjOMTjcWQyGczNzUGW5XV+u6IomJiYQKvVQrfbRaVSGTKQrQLHcUPFsUgkgmw2i1KptOsB
      MZ14vu+j0+mg1+vB933wPI9WqwXP89But6GqKnRdP+P1bnb/BEGA7/tYXV2Frussgxa6QBcA
      cn8cx0G/34emachkMvB9n6UcHcdBu91Gp9MZei5lfXRdR71eB4Btc0eCrlg0GkUmk0Emk9nS
      93AcB4IgwPO8cw6sbduG67rgOI6dlAAwNTUFz/NgmiYrFJ7OADiOO208Y1kWDMMAAHbyhQZw
      HqCF6vs+YrEYNE2DaZrodDpDhadkMokTJ05seCwXCgUoioJWqwVBELZl5x8F0SIEQdjSnd+2
      bSwvLyOdTqPf70OWZWQyGfY+FHxvFMDSSWkYBlvgtm1DkiTouo5oNMrUOy70mi3LAs/zSKVS
      zNBCAzgP0Bfqui7bUTzPY8e3oijMGOLx+FAwS4skGo2C4zhks1kkEgksLCycsap7oUin0+B5
      /ow76ZlAwbMsy+h0OpAkCa7rotVqod/vAxgs1lwuBwBnjGuI10Sg3Tkejw895kLhOA7y+Tzq
      9Tr6/T4SiUQYA5wtgkFaJBKBKIqQJIkVmgCw49pxHKRSKaiqOhQMi6IIjuOwd+9eJBIJ9nvK
      Dm03HMdBoVC44PdaXV1Fu92GruvQNA2u6w4F/uRmBT/7md6THhN83Ea/uxBkMhkWpxmGgWaz
      GRrA2UJVVRZIEqjwND8/z45U27bR6XQQj8dZZRgYLIr5+XlMTk5CkiT2pfq+j3a7fcb05laA
      47gtcX8ikQjq9TpWV1fhui6rXczNzWFmZgZzc3MXZYGN53koisJOm3g8HhrAZhhNy1EWZ3V1
      FZ7nsd/zPI96vQ7TNAdZBVFEsViELMuMjgAA/X4fvV4PHMex11VVFQsLC6elNmwVqNp8oSA2
      KpHzer0e+v0+VlZWwPM8MpnMRZNa3Qg8z2N2dhbpdBpAGANsCqrKTk9PQxRFiKKIaDSKarUK
      13WRz+fR6XRQKBSQyWSgqioEQUAul0Or1YJhGOt22k6ng3w+D8dx0Gg00Ov1NqVKbDXIILcC
      5P6lUimYpglN06AoCkzTHMriXIwg1u3s7GyYBj0daDcLZi4kSUKpVGL8HKIYE9delmXIsgzL
      slgsQOA4DsViEYIgoFarDfH4dwrBauj5gmKZmZkZAAO6RiQSQTqdRqvVgiRJz5vuM9/3Qxdo
      FJ7nQdd1dLtdlpsGTvmPqVRqkD3geUxMTDBfN5PJIB6Pw/M85HK5oXw0x3GYnp6GoigATnF0
      6HV3ApFIBLqub9nrRaNRqKoK0zRZ471pmuvipIsZHMeFJwCBenY9z0MsFoOu60OBnK7riMfj
      4DiOFZEEQYCmaSwNCIBRI7LZLMtnW5aFWCzGjIKO4G63i2g0iqWlpbPqG7gQWJa1pe4WnQSu
      67KiXyaT2fZU7lYiNIA1+L6ParWKVqvFaAujASMt3qD7QClRqoCSEamqCk3TwPM8RFFEJpNZ
      V6Hs9/vodruoVqs7smPS9QiCcNrWy3OBKIpIJBLs9WKx2LbHAMEOua1Ij4YuEAZ+bK/XQzwe
      Z7s+3WDa0WiXp0XuOA5UVcWxY8cY977b7aJcLjO+PTBYeK1Wa12lV5Ik5hLtBEqlEiYmJta1
      XJ4vOI5DMplEKpUaytdvZd5+I5imiYWFhS2jjYz9CWAYBpaXlyHLMiYnJ1keP5VKwXVddLtd
      FItFAIPFTL6vpmmYnZ1lleDjx49jenoa8/PzzPUhjj+AdSdALBZjASQR1Kg1cjvcIXJ/tpL7
      z3HcjrRZuq4LTdPgeR4ajQa7V+cL27YhiuKAKbuF1/m8xGgw2+l00Ol00O/3MTExAdu20Wq1
      EIvFIIoiNE1Dt9tlO93ExASjQbiuy/p1ySWKx+MbVnoplkin00O7ZiaTwfLy8pb70q1Wi33W
      rcR2V7ApsG6325BlGRMTE+dN5aBTmuI5TdNCA6DUped5TMmBgtt2u80qnXTjyRWiBd9sNpHN
      ZlkcoaoqotEoa2KXJAmzs7MbFoc2ygDF43GkUinGEN1K7AThbivhOA4WFxdhWRYKhcK67NrZ
      wrZtxtYlQhydKGNvAASe5+H7PmMxUjuioihIJpOIx+NwHAeyLCORSECWZTiOg2azCUVRwPM8
      E8AK4nwC3FwuB03TmPu0FSDi3fOlKZ7aP03TxNTUFLLZ7Hmp6BFLl5pqRk/jsTYA3/dZAzpl
      c1KpFHRdh2VZyOfzjLUZBGU7fN9nWaOpqSlomgbDMOC6LmuPpObzc4EkScjn81haWtrKjwtV
      VbesGrwT6PV6yOfzQ8S6c4HneWzxEwWFXFPiRI21ARiGwYSpkskkozIE03mjN55uIrk3kiSx
      YDabzbLHbAXhjOf5Lct2KIrCGKgXO2jndhwH2Wz2vIuFPM8jEomw3X80uTD2VAiiJwd3Csrb
      B0FtedlsFq7rYnFxkVV3q9UqyxrNzMwwclgul0O322VfQDwePydVNqJcX2gwTM0pmqY9b6TS
      KZ4iuvlmjwE23qCo79myrCE3ktyfYNJhrOsAFAhRcSWZTLKeXqoKu67LiGsAGOMTGFYYUBQF
      nuehUqlAFEVUKhU0Gg3ouo5Op4OlpaVzqsRyHLcldQI6sWZnZ58XHJ2gW7pZ7wJ9X1SXGUW7
      3Uar1WLfLy146koLYwBgqHkdAKtm1mo1xONxWJaFYrHIctBEg2g0GrBtG5ZlodPpIBKJIJPJ
      IJFIoNPpsECZ0o6WZWFmZga1Wo2pPuzkLjzKSXo+oNVqnbHG0Ol0YBgG8vk88+c9z4MkSefU
      Yjq2JwAdlSQbks/nmbvR7XZhmiaWl5fRbDYhyzKbvkJSIuRPRiIRJm9OvyNXynVduK6LSqXC
      ToFzcWm2omhlGMZFrwAXhOd57JpPB2LciqIIx3GYQEGz2TyndOnYGgDP85ienmZUXvod/Uei
      VcR37/f7cBwHoiiiVCohn88jlUoxoSkAbCdqt9uQJImdMvSFUk2h2WyeVXAbjUZRKpUu6HMK
      grBugszFDMqgBekkQVA7o2makCQJnudB0zSmH6TrOtrt9lm/39gaADAIEGdmZpDL5Ya4/EF5
      Q5rBFewOkyQJExMTzD3qdrtMCiWVSrHCiyAIQyQ6Mo5KpQJd189YI0gkEsjlcqet3r73xtPL
      m9CJ1e12z+XWXBBI0Krf759zHYSIiJIkbXjNJJBFdRuK1TRNYzwn2nTOBmMbAxCCrgFJlYxW
      ginYqlQqyOVyUBSFNbMTDSKbzUIURVYfoAVOvyNDAgZf4tLSEorF4mnTfHSsn65f+K8Obr7b
      0QilRCKx7f4/uZQ0vYaC2Vwud87UBUEQGMWEKvPBvoyg2jUxXEd7Hc7W8MbaAIJxAPnxlUqF
      nQKiKA6lzizLYjeeUm2RSIQd1SQFkkql0Gw2GfWYnt/v95kr4rouarUaG1+0EUzThGEYyOVy
      Q5pDZwvHcXDy5Elks1lMTk5ewJ3aHJSzp2wX8Z/S6TRrI9V1/ZxZqIIgsGCWfP2NOFWUaAiC
      Mj7Ba6T/Rme0ja0LZJomqtUqVldXsbKywmT4ZmZmMDExwbI1PM8jn88jkUiwLwUYBMqtVgsz
      MzOszZGMgwIzIs2RdAo1y9PNp17jzUAZpgvpGkun09smgUgp1kajwZrNo9EoEokEer0eBEFA
      p9NBo9FgacnTaXeS7z4qiktiBJSBC55oPM+znoRRGRbid9Hr04kSzBCN7Qngui4TePL9wbQV
      6vUtFArscbFYDKZpIp1OM7oEcEolQhRFxONxJptCj9N1nfmpwODLTCQSTCqRToJgg8coeJ5n
      MwPOZfcnoalsNsvEsLYDlmVBVVWk02k2yGN2dpbl38k3p/5pmmUcdPuCWSqioNNMAE3TIIoi
      cwEty2JZnkgkAsMw0O12WdCsKApUVR26Rtr1if48eq/H1gCAYZ0cWohUOMlkMozXr6oq+6KD
      /j/HcdB1HaqqMvcolUoxFeZ4PM4qmRQr0BSYTqcDy7KwuLiIYrHIaNFBUMaj1+udFS2C6M6x
      WIxx5rfT9+d5nskakuRLLpdjDf+GYbD20uCCr9frbHQr7ciKojAjAQYuUJDDQ6DC5GiSot/v
      b0g5D/5uo41grA0AOBVEUdWXgl266ZS+9H2fzeqi3Y2CsWBsUKlU2IwA6hwjISyiQiQSCXbc
      W5aFlZUVeJ63IeORMh5nYwDJZPK8WJPnAzJOUnGm4DTYKzw6F5k+g23bUFWVuXfRaJSxNglB
      /dVRBO9DMplklftRnOk+jD0XSBAEJBIJVvklznjwZo5WFOnmC4IAy7JYipRgGAZSqRRkWWaZ
      IeDUbknHOIFSr6urq0yKJQjqKjvTl0nP3Yw6AGDdbnqhXVVk/GkxikQkisVekxHPCHSiUs2E
      9JIoM+Z5HlOSIGMJ0heC6efg56FT2rKsDQeJnAmk2je2BsBxHCOoSZI0lE043W670U5DX1gk
      EoHjOGz49Ua0B13XmbguAMzOzqLdbqPdbq/LBtFzqcizEch/pgB0FJRKJUJeq9UCgHWB47mA
      XpNe702X34Bb5g7gY3d/mV0PCQcnk0k2PyF4Oum6jkajMURbIHc06KoEXdPR+6Kq6mkpD8HX
      Gf0+DcPAvtvnxtcASJqQZvOSsnFQ9pAeF8ToLkq/o8fGYjHIsoxer8dmBQBgbFMq0NCX2u/3
      USgUWNpwFHTEU7EtiEQigcnJyaHs1Cg4jkMikUC9XsfS0hKmJydwcmkZjuMMSbWcC4LCAKIo
      4tuHHsF3jzyGbDYLWZaRTCbRaDSGKBjBKZUAmPsUdJM2A20wwecHX3Ozzx08UUYhCAJqh5rj
      awDA4CbRVBI60jfyOWmkEHBq0gg9f/TxJBHYaDTQ7XYxPz8PnufZkLdIJMJ0RD3PYyoS1Hg/
      Csqlq6q67vShQtfZuEfU9knjkhKJxHmxQ2n3JxeG53kgKoNbc/Ecx2G+fLALi/5Nw0SChSy6
      l5shOB8smFXb6NroMwaNalSxwvd9RKNR9JbU0ACA4S9qIxcn6BKNTioM3liSR7QsC5lMhvm9
      iqIM6QzJssxYpySvUiwWN10EtHhHcS7MUqJ6N9sdzM/Ps2zWuYCayi3LQiKRYGxaCvCj0Shr
      YyTjoGwZiQvIsszcubN5/+BjyPfneZ5NlQEwpMsUfM/gawRPSI7jYBgGCi/Kjq8B0G5BOzod
      59TrS9wewzBgGMbQZMFRUPovKHFSKBTgui6i0eg6MadUKsUWfqlUOqMMiqIokGV5iBIhyzIb
      QHE2EASBBdgbpVspNtgoixQsePX7fXZf6LoTiQQSiQRrJYVt49JCAUcaDdYtR5k0qrKfD0YD
      ZULw5+BpsdFnDT4nmoqMrwEAwzeJblQkEkGpVGL+OlUj6XEbIZVKratEjh7VzWaTaY2mUink
      83nmLp1pXhdNdKT2TWCgHnGu/vtm19/v9+GIAvt5o77hVqvFRq5Go1FW36BmIHLzAMD1fTTX
      iljRaJS5RORKnq8B0OKnzWT0HlPhMXhab/ZesVgM5YO18aVC0FFJN49y96lUislmUOme/rbR
      zaQWyo04KqMLlILZlZUVGIbBJqmczYSYoCgvve9WQZIk6O029HZnU6PSdR2O4+Ctc3Nsdhdd
      x+jJKEYi6LouSqUSIpEIoy5cSNo12AVGpzEZE9UeRklzp3s/ygKO7QkQzBIE/UPKSVNTNjW+
      02NH3RWiAJzufYBTC5bcgKWlJezbt4+lDEfTf6Mgro3ruiiXy6yHYSsgSRL2zu85q8f93eIi
      kskk22WJg09uGg3JI+kYCpjPJtg9HWjxB4mHtOhPt/OfzhXiOG58TwC6WaMZAo4bTHKfzJbw
      gde/CzEpuu6mBx97Nrt38IgWRZE1vBNUVT0r/jo9f2ZmZss0Ps8WiqKw5qFSqcROR+rgAgab
      QTabRa/XQ6vVgmVZ0HUdrVaL3YPRNPPZgj57sLAYzAoFkxNUYKPq/mlf95yv5AUC3/fXVS2B
      UztFTI7i9htftW6hkxHQ7kOD4s70XsRXDxoPtV72er2zJrwF+UvbgdHKNoGmwhSLRYiiyJpd
      JElicjAcN5gRMHPNBDzZZfRoWoRkMEEhAsLo34JMzuBnD3btBZ9Lfx/ldp0xRXx+t+n5j40K
      KwRZlnGsvIBf/sRvQjW0TSvDdKPPpOBGDNPR1JymaahWq2yn3MoBFucDoiRTnYLAcQMl6HQ6
      zSa200kYFKp1HAe2bePogycgufKGFV36mbJCtNjJvaGfg8ZA10aPpc0omPIMGgHFB6NxwUYY
      WwMAsO7IDO4acSWOmBLbUBluFMHC10ZSHb7vrzu+gwEcVXJ3s2+XDLnT6TBKsaqqzH1xHAed
      egsTkRxa9SZTyQgGzf1+H41GA6+57ZVwHGcom7QRp2d0gVP6eZT6QAQ6+nvw39Q7TD8Hi5nB
      /wf/C7722BpA0K0J7kLBv59LoYYowY213PcoggSvYNwQPLapuXs34DgO9EYD753fA3OtsTyt
      qriOF1Cv1wcLWo7jbT/1JnD+oPCVy+WYIdDnSCpxPHTwIBRFQTweRy6XA8dx607QYIGMuuuo
      F4ASEHTP6ESgxU6pV/rbqDHQdzlqMADWGYBw3XXX/cHjjz++ozf7YgAFo8GFHjwRyBiCvv/p
      fHRa2MTvoRtO6m5Eo6bXCn4Jo67BRinU7YRlWaivrOBPr38JfuFFVyDLCVhs1PG5l70cb5nf
      g2erVTynqTBdE/c+/kPEUwrjLtG9ouQB57mQJQk9TUez2UQsFhtqPKLHB+81nTCE0Soy0Rso
      yKbiYi6XYxSRaDQ6tODpdQAwwt2o2wSMcT/ARouZFjn1CdMRv9FJQA0co8cswTAMRjijHSho
      SEFflt6LGKmdTmfHpi36vo/VShk3z0/imvkp+FMTeLfv42179yIiCHB9H6/eN4vvHzwIUYpC
      kEXWz5xMJtFqtZgOkiRJiEbjaDabmM0lEJEkHK3UMDs7i2q1ymKE4Oenzz5KmqNmeNM02URK
      6roLjqC9/PLLmQoFdfVRdZ9cTQBDfKxgQW1sXaAggkWW0aCMBJjoJtNCTaVSZ5yHFRTPGs3x
      B0+WoGQfGQSdGNsN3/dhmSZe8uL9+GJ5AZVnj4L3gYggwPN93N0s4/b3X43vfOoDuP3Fs3As
      E7raY1LwJH8ylUszIQDHcTCVz2DPZJ7dL0mShrJulIUbdVlG7x/t3NSMRO4l/e7YsWNYWVnB
      ysoKG0YSdIeChU7azILxwNieAORTBvP6tPiDGYVgXBC8mc1mk0mpB/154hfRc4N6NYTRVGbQ
      3aLK85kKbFsFjuMQTyTx51+/B9flcvjgjcNCXKbtQvViuHwuidliAb//wQN48vgS/vb7j0KW
      ZZY0sNcWryRJKBQKuP/ZBQiCgMnJSfR6PaRSKZbtAjbm8iQSCeTzedZmGqzU27bNNglyuUa5
      RZqmoVQqMYnKoGQiuVH03FgsNt6VYOBUdoGMYJQbNJr+pFOC4zh21NLvg/8nIwhSKoIIvlew
      lZCO7XQ6vSO7P11LNptFwrLxZzfegql4HJ7vw3JdREURb9mzD/3kAdxx7/2oNFXkU0TA81n7
      ZyaTwVK1wYiE3W6XuXDlchmW70PkeZTyecTjccYoJZDaHjDQZhVFEbOzsywdO1ovEGMDFyeW
      iqJbUdn9M00TyWSSMW9JIMv3B30a6XQajuOg1+tBkiS02+3xNQDaqcjVCQamxF4MVhtH6dBk
      DNSwEgy4gOEZAbSwg6oEtCNlMhlEIpF1gXCn02Etldt9EoiiiDp8PNqooxidxbfkJD5/z534
      3KtvR6Zn4ROf/gIecxUsHj2Gr33/CXAcB1mO4LUveSnuOXg/TFeF6FvIFmdYVsf3Bz3DniDg
      ln/9W1i493tYeehhKIqCmZkZ1Ot11khPREKKJ2zbxokTJza8Vtu28foPvxJX3XYAsUQEf/mr
      X0FrscvuO42W4nkeuVwOpVKJ9SgsLS1BEASm5G1Z1vgaAPFVPM9Ds9kcYn2SrmdwEZNvO1qt
      pEoocXrIIIheHPQ3gVO+P8/z7LGkIEEnj2EY0HUdpmlicnJy2zNCoihicmYGv//kE7hnZQU/
      tBxceeWL8N1SHrVDR5C79lrMHTuOQ2qH7aayLOPexx6CYVvIxXxMZyU01wpj2WwWjuOg0WgA
      nofD/+ub6DdbrNYwqtlPmbKzSQFzHIflZyu47RdfhsZSC72GtuEGQdk42rCo24/iAzpxxzYN
      SpReErTq9/uMb0/BL6XvqGF+SomjvlbsooZ4Q9eR5Dj01mjNJO4qSRKjC4ym9ej9FUVhQ9uC
      cYKqqpj0fXT6fcSTyR3JBnEch4ii4IimwbEt+L6Hvfv2IT45AUkUsbS4jI+971fgeV2stAY7
      rrw2NZOT4vAjWVi2DU3TmMLDm664CUdqy/B7Kqw1oaxkMsmGDAKn5E8orx+NRof6hEfJbK7r
      YvqKEo4+tABDNbDw+BJc0xsyAtr9qUGn3+8jk8nANE12slMsMdYGkE6nmX9ONyaYraGfTdPE
      +2++EX/9qx9GrdfDoycHE2J4AB9/61vwJ+96B/756adxZKXMjn9a4JTjph2HvigijdGIpWBa
      0PM89FUVNs8jt8mQiK0GBebxeHytob2PKy6/HPKa9MsTP3kaihzFwRNLqDYaSCgxXDkdxzUT
      e/Dk4iLcNZeu1WrhddfP4/ByE2Wzi8nJSRQKBfj+QFo+FouhVqutW9jU4ENpY13XmaKeaZpD
      cdnKoVUsPVXGsz98Dr49zOalGMowDKYkR/pOQboFfedjbQCUxaGFGczLA6dShO95yQ347Pvf
      h0w8jtde+SIsNpp4YnERf/z2t+E3X/NqZOJxvP6qK/G9p59GY00JodFoMNeIArFMJsNEq+h0
      IQGuIPU6EolAUBSkL2A+1rmCCHuO46Ber+PlN9+EUrGIp589hEIuD0kS8f996xt457/9I7z2
      Pf8Sual53HPXt7DYbiO7Nwu1obPMy2K1BfAiCoUCm0vmeR5TzSCDJyOIRqPI5/PMVWk0Giw4
      N02TZZCAU4ZK1JLR+0NdcrqusxoDxVUk20ipW88b8zGpweCUdqJg9sV1XezNZvHp974biTUX
      JSbL+NwH3of33nITXnvllex505kMvvALH8TL/vhTTPXNsiymgkbKE3TikG6Q53lDjS6EzWZj
      bTUolaiqKvqyBN/1AI7DY40GDh07jsNHjuDpw4fhWS5uuepa9DpNXHnzT+Pp+++FIMdguzbi
      DofrLrsatXYd9XoZHAYdbCQZqWka8vk8ms0motEo5ubmoGkaOs02AA79tVZKqhFyXuwAACAA
      SURBVPASDMNgJ2osFkOv12NN/QCYMBnJK1JwS4YcvKfkxgqCgKmpKVaHGOsTQFEUthNsBI7j
      0FRV6KaJV7/oCghrN1QSBFw6Ijjb6ffxK3d8CUuqxrRBiSvT7/exurrKjnLfHygok9+/Ey7O
      ZjAMA+VaC14kgRt+/Vcw8eJrIedzuOzNPws/aaO3uADX9OH4HharFeiqise/+VXYzRoarTqK
      xRJ6NRVzVxxAP8pDaDQQ43kgHh/0EfdMpOeuwcKhR5G95AZ0O23w3iBWeMNLX4uPvud/x3cf
      /B4My4AkSYjFYshkMpAkCYqiIJvNDpT3bBvveftb8dzx47DWBHInJiagtlv42Bt/BuV2Gz3H
      QaFQQKvVGqJFUJM+/ZskGyORyHgbAC3OzcBxHARRxEMLJ/Gl+36EN117DbIbSJnf88yzuPUT
      n8Khag32WiDoui5arRZrdiHfPplMolAo7HhDy2bodDqIFffh2td9CCce+i6mbroemUv2onPy
      JB7+L19CKT2YYaAoykD2vbKE1WoZK5Vl1hzfNw3cNm/hqrf/LlYaNaj9QWyzUq5g/0+/G5e/
      7Odw6Uvfgsn9N0GOp3D0se/Dcx2s1CpYjBjorJbxkV/5EH58/4MQ1vhFNOhudXV1kGHzPJQr
      q+h0e5iensbs7CwkSUK9XsdCvY5KpwvdslCtVlnD/kbVZQBMtKvf7483FYIKKKcrOlFc4Lge
      7E26i0zbhuefUiGm4C3Yskc+8PmqsW0XUqkUOsuH8ODf/Qlmbr0ZHM/Dc12k5mYx/dJb1vUo
      xONxzM3NYc+ePUgkEmzH/sYRQJQHRu37A+0gngMO/eBvYek98IIIz7HwzD9/FZw/CETrnQYe
      uvtu6P0+fvjjB6D1dZTLZbZLkx9P5ELTslkKtlKp4PDhw1AiAg6tVtE1zSGN1o3o10HQ9zTW
      BkCB1una9CzLwmQ8jm/8xq/jwCZDJt5wzdW440O/iPha0Yp4J8EKryiK2ypVfr6QJAmz0xPw
      9C70WhVLP7ofBz/7Oej1OoxGg9UgbNvG4soiViorOLbwHOr1Our1OjNqq9fCZz76ASz85GFk
      Mhkkk0k4roerX/NByPEUDLUFXpRw7es/BB+DSm46nR5oJxkGvvu9f8YluXn84ivfjdpqDQJ4
      /ItXvxupeJJtIq7rMiU8kqePSBJSqRRjpp4tWMPMOLtAtCApYB3tAXBdF7lIBHf++q/hmtmZ
      oeebjgMx0Oh9YHIS+ydK+LtHHgHHCyylGqwgx+Pxi25WL2W/EoqCoz8+CKdhQl8+jqX7HwDX
      UxGNRtHtdtFoNHDJ7bO45BWzmHpxCc/d9xyiogXHG9CUE4kEstkMUqkkOwkBQO11Ad/HwTs/
      AzmWwOqRh9GuHMeLL78Gel9HPpGFLEjIxtL4vXf+K1wxezkm0gXceNmL8ZrrXonJTAkPHn0U
      2dyABl2tVtHv99lYKo8fnLJEfwhOjSRQw1GQ9k7p6Yvr29gFcNwpoaogVYH+plkmqmu6nLSb
      3/PMs/gP/+sb+PIvfwiXrA3TcD0Py602HM9HJECsI9DRfTGCsmGcY6J58llMT00w1WVipZqm
      Cb3Zx1Vv3o/j9y2C44CkIkCzh5uIgj/ncznUasfgHmxgbywO8cnvgdO6uPXKm/EHv/YxtHot
      lLJFPPjUw/g/v/hJHCkfww37rsXLrrgJAGC7Dh499gSSqUExsKsZKO7Zj5OHnkRElthCJjW+
      YrE4pBZNmxCdIMFrM00TH7j96vF2gQiRSASTk5NIJBJDU2B4nocFDu//whdx99PPAAD+6dlD
      eM9ffh4PLy7hLX/+FzhUqcD1PHzu3u/hd75+JyKBFkrahWhm1ka+v+M4WF5eHioO7SQcx0F1
      tYLKyjKUiAyBB3q9HqMtBJXx7L6N+z53EK2FDiLRBCwUWEN8kE5O4LiBYt5TtZNom3381q0/
      B97z8MOnH8BffedvcMWe/YhFYvjKP/41DMfE/3PX/0BL67CTuNKq4p4nfghFUVCpVJCdmMHb
      fvXfQZQGRTPLspi+EtHVqb4SjMXIAILVeEmS8JV/emq8XSCaRE43nPLQJAHC8/wgXRZX8PUH
      H4Lt2Pjtr30dhj84amuqirufehr1noqP//1dEGR5nY+fTCaZ2NZG6Ha7KMzvR6/XRTy6/vnb
      jXa7jVuuPoDf+5Wfx5tvuxXfue8BJNMZxpoMLuheWYNsRVB/rslOSyp09ft9LC8PVKcTiQR7
      nmma0G3ghrd+BIfjSRxduA+iI+CPfvXfo91rIxqJIqUk8f1H7sOHXvt+7J/Zx94vKkWw3FjB
      ydoyLMtCu7GKh++9C0klBiUeR6PRgKZpUBSF9SDTtJ7gzr/RxsNkVrb5/j4vQZ1IlLrUdR3x
      eBwf//Z3oCgKxLVdRhAEnGi38cf/+B1EIhGWxwbAUnE0fXIzxONxLDzz6JrBnV4icTsgCAKa
      nS5mJ0tYWKnA9XysrKxsSEzzfR/ZbJbRmakpJp1OwzRNxqcSBAHVahWKogy6t6QoPDkBFCOY
      uamEJ+98Gn/4hT/GsZUTmMpPIuU7eOuBa3HL5S8GBw6PHfsJwAEvvuRqvOa6V+LJpUNQFAWd
      TgeuZaBtGeh1u/A8Dzk5Dlm1sdQeDOcolUpwdAOXZSfxaOX4hurZQTp6eAKMgJiJNKiZjnV3
      TeqPW2M8ElelUCiwSm8ymWQFLjIEGqW6GQRBQDab3bX0qG3b6Gsavn/wMRxZWMLhE4ts8cuS
      gN9+78ugmw7KjYFShCRJQ9MeZUGC2TfQ7g70P+lU6PV6rLXU93w0Fp/B4uMPovzUCXi2i4XK
      ItS+htVWFdfGIvjIZZfgzx/5MRyfw2f+/vP48bMHkVZS+MLdX4EYkQYkOsfBG1/zahy47FI8
      fegwUlIUf/5zH8Y7rrkVD548jOVWDVq3h9971TvxkZf/LFy/jYeXFlnjPM/zyGaz7Psaazr0
      ZqCsEDEKSbDKNE2cOHGC7SimYWBiYoI11gcpy0G+Srfb3ZDqsNsgvj5x8ltaHwd/8uywDw8g
      HpUgCsOTVoKG+qE3/zz277kcH/3078ByNqYze64N2dMAD7D1U40wdMLevbyM+1YrqJsm7n7q
      AXZyfP7uL8O0THDaYNSs53vIZbJwXAclJY0/fdMv4crSPDiOw2ff+mH87l3/A2+7+mV4w4GX
      gOM4fPjmd6GuAgtaBTOJJp6qpdExVKRSKcbTCk+ADUANKpRrNk0ToiDgtbe9EivlMl50+eWY
      npzE0srKaaewU27aNE3WPXWxVIBpOF8ikYAkSfA8j9EOqEXT9Xz806MnsFzvseel02lWoAKA
      vmngqWPPYKl2Srk6kUhAVVXcdPubsXL8MIDBvSgWi+iuuS7s9ZQkHN9DxzQxmS/iFS99BQ4d
      OwyOG4xctW0b0Wh0MBa1b2BppYzjJ08iwcl4xzUvRyIyOGkVOYrX7b8eB4qz4ANZvESmgFfd
      9EZobg4fvO1dOHTyCBZrg6GEsiyHBrARKCimwErTNFwyN4dbbrgeL9q/H5ddcgnSqRQee+JJ
      xBVl09w+uUuVSgW3770Gj588OqSktlungu/7WF5eBjDYhev1OnRdRz6fZ9c3On09+NzJyUnW
      nF7vNLC4ujx0cpAB1JYX4K0Zk23bjA1LBpROJHH3p7+A1VYDzywcg24a4FNZXP/G1+CS667F
      0z9+APPz82z2ciqVgu04cD0PtuDjnw89jlfuuxqKvKZUzQf6rD0P//Whu/Gpe/4nXnrgRrx4
      39U4vrqAv7nvGzBtC5ZpQpSk0AA2A2UJOG4go33kuecwPTmJUqEAz/PwD3ffA3+thrARSOmg
      0+kAvg9VdBGRZVimCa1XQbujIp3ObtfHOy2IcpzL5dDr9diOH41GUalU2L2hREAQiqKwSvfE
      xATT66H0IzCgJA+o0TybwUZCWaf6DQxw4NDodvDsyWOotgZdefXVFVx32ysgRyN48oc/Yvef
      UpjRaBSxWAx9w8BiYxVPlRfwugPXQ+SHZ6Td9exBfOLev8a1e6/E66+/DV29h0Iqh47dxeye
      KUxNTODosWOhAZwNarUaLt27Bzdcew1My4IoSpgsFfHIE48jHldY3YDy5hQnOI6DWq2GPXOz
      eNNrbseVB/YPRosaq1A1G52OyqTDRxtEthOUIqRUJ0FRFNZI7qwxK4OzjkulEpOBJI5QcAIk
      iVPRaCg6SanarGkaZFlm4rqGaeKp40dRbTWHru/oo4+h+pOnsL9YQEPvr0sQUJFR66n4tZe+
      AVeU5tbdt2wsgfsXD2OhWYHne/h///EOOJ6Lp5YP4eU/dTNUTcNzJxbCIPhskEgksLRSxnMn
      FvDPP/oRDlx6KQYh4ilBp2CbH01MWV5exmVTOTTbbYDjIIsi6s0mnNQ+/NobbkSr2cKXvvkd
      QJLA+T4iosiYl9sJ0zSxuroK3/dRnJ+DY1porf2bUoSmaaJarWJqamoge7ImPBV0jUzTHAzX
      0HVUq1VEo1HMz8+j0WgwfdGN7mUqlUKxWES5XB6ShKHdneM45EURn3j72/CuL/63dYvbdV2o
      rQ5+/9XvwRuvuHHDTaOYSOM//9yH8W++9UX87f3fwvT0NL7xyHcgSxLu/NY/IBKLI56fC0+A
      swHt6I8+8QRi8TgWlpawXC6zEryuD2QAdV1HKZNCszPI/BiGgUarC0VJ4PKCgPufPALbcbB4
      chF9TcdiZRWNdhdyNourLlXwjttL+P5DZaRSqW09CXzfZ8GoY1ow+314a73Mpmli7/WzAAC9
      OxgcnkgksLKyAtd1sWcmCdf1YdmDUUmUYgROqbmNBrpBUG2EXClKG2ezWXbayLKMSrOBbz3+
      JNK53DoKiaqqmJWT+I2XvxmSMNjDPd/Dtw89jFwsgfgaKzURiUHgefx4+TCKxSK7r4vLKyhe
      /Rpc87p/ERrA2YJ6VonWENQVtTgDt7zzehx46T7stRMweyqqPRUTExNIZ7LoqSp+9Phh1Jst
      GKaFmakpNDpd6JaDyclJeP0+Fso9KNlpLKxUEJVjW0aaazQaaK/WoBoDVwIYzCvjXAA8h0w6
      jeha3YL889rJBhxjUL8gl4WC3nRSQt9w4XqDSe3dbheZqUthGxp4btDrrKoqPM/DVdPT4DkO
      2lojEM/zUKZjaFabyGUGC5s2Dpuz0GsPnjc5OYlcvoDkmmTMRt9FudvE0coybt076Mr77we/
      i//73r/Bg4uH8Yp9VyEuRfC9Y0/ikz/4OkpTk0Nq3IOpNiqmDtwSGsD5YKCLI7PgrG/rePvH
      3oBSUsRbuFlcVprCNx59jM0OI5XkTCbDqANEvgPWRpg6DrrtHkovugonnn4WyWRy0+HX54JW
      q4WrC3M42a4hm83C933UajXcfvWtWGguo1AosE41kn5Mp9NQFAXFYpFJDFJhr6s68MEjk8mw
      lkXXsQHPRmGNkUnuj+260C0L/BovJxKJwDRM8L6ATHrwfFVVYds29r1kHlqtjz179rCRVJud
      gnRPD9eXsVAr41ijjP/ywF3gBR46HDx88ghEnscf//BOZCeKQycI3VPL5TH9opeGMcCFgud5
      cD6Puz57L4qSh28+VEa95+CSaQ6Li4uYnZ1dNyii3+/Dbzax7+o5PPjkc7h0/lKIoogXTxcg
      Z/KQ9hxAVWtsyRywUqmEI506pqenAYAV7UyuDCXqMW0j2rXn5uawvLCAywoFLHe7bD6CaZpD
      +keSJDEZGN93gDUaiKqqjFNlAoAoQln7dzqdRrvdhu3aOHbsGCRBQjQaRalUQutIDzMzM5uK
      EY+C4zgUi0XcV30O5smnIcqDWkY8HkcVBj7xg69jamZ6Q02lTqeD2Zf8LKSIEhrAhUKWZWSV
      HE78eAXH12gAjX4Z+y67AXbWQvnoMWSzWcRiMVZ9FQQBHcfB4nIdAncqiH52eRmNZ45Cd3hM
      TU1tyfWRAl4Q+XweDx85gr5hwzAXwPMicrkpNtTO5zhUul1Uu11EEzlwzqDJ3LIspgKdTCYx
      MTHBhlSTe0FDMYJq2EQhIc1OAJAFGQf2XIaF+hJLq3a7XSSTSTaB8kwgIwDAlOYcxxmoz83N
      bnqCTk1NYemRu1A99nhoAFuBWCw2pBTN8wIKV96EvOfh+HITrZaK5WYThmUgk8rAh4+ua8Nu
      9SELMo4fOzZgUU6k4GMwcX47G2cikQhyxTmUy2Xccs0sHn7qCKLRKJrNJnieR3FiAisrK+A4
      HnIsCaPdg+d5mLr5JlQeOsiKUnQSkNwgEePoBCBJmE6ng3Q6vdZ4ZIKDDx88njl5GNlsFtVq
      laVVz9ctjUQiaLfbsOCj2mpCBIfJiYkNi42iKGJyooiTC0fDGGA7IAgCnvzhj3Dk4CP46Mve
      Attz0Jk3sf91+3DikZPI7E/iyp+9HEuPldHXDHzkbe/DbTfcgn944AGkMnn4vn/WrsD5gAJS
      wzDQUy3omo9OrwtXU7FXkvBMuYwbrzyAYkSDrTZhcwNqeHdxiSk4k4oejUddXV2FxPnoqhpi
      sRiazSYajQYEaOipBtLpzGC+sOTgmgM5lGun6iW5XA6KokBaa288n88tCAI6vS7e8+9/F7e8
      +U14+v4HwTnuhk1Ivu+j2Wjgf3vZJeEJsB2gY1zXdfxf93wVYkrEK3/1ZYgkZSSKcaRnUxAj
      AloLHTz9rSPQDWPQVM/xaPS64CQJcVVlXx4F3FttEMViEY1GA4VUFqudOkwAh7tdZLNZPPXc
      cfiOCV6UkM0NVOwoXVldXYVl25iZmWFkQcdxMDsxh2dOLMLzPExMTODEiROYm1TwkyMDhYd0
      Oo1yWcfBn7SGZiaQKNfoIMEzwfd9tNvttcEcUQAcOHBwLAscz8P3Nm4w8jwPtqnhwz97A7gP
      fvCD/h133LEFt/P5hXQ6jdnZ2W1/H9/30Wg0ENkj4JZ/eQPEyMAvXX6sgoOffxLZdBaNRoMJ
      ZVUadfCSDNl1USjkIfA8KqtVzIwE01t5fZ1Oh/nupPkPDE/SJKGpbrcLzvQQlaKw5UEWi+Rl
      TNNEfE0PiKgk1E8ci8UwMTHBegiSySQ6nQ7LhBFP6FzQ6XSg8V0YHQvzk3ugqiqa7TZ830M8
      FsfkxMSGBkXDxmcyUngC7Cq4QfyQz+dRKBRQLpdRyg54NLquoVqrgcNg+MR2ukOZTGbd70ZB
      gz60Xhv5RAR1vY98PM9kHUlistvtDj1P13W87837UG8a+PYPnsNkQYJjAbougEv4UJQonKZ/
      1oFvELIso1Y1IUBgmqB0Up5uPCrHcRA5Dx//0G1hT/BWYTMdGl3X0ecs3PgL10OQedSPNmEb
      Dqavm8DeV86g0WggkUigVqsx+e6BaJeCSCQKSZYRi8WYvuhuoNVqIWXzqK9UAB9IxKKA56Fc
      LiMba2JxcZF9fhKfpYyXZVmIygJkiYfvefjwu6ZwzeVRWJaFXkVDc6Fz3s1A0WgUl85fir3z
      e1nGifqAT3dachwHnxPwk+O1MAjeaox+kY1GA4VLb0UsOY/a8Wdw8ItPoL3UAXzgmW8chchL
      rH0SAJNjJ9eAXi9YrNqJoRlBuK6LdqcNlwdiiQR8V0AumUZL7cKyHNjuQKen3++jlOXQaOng
      OB6JyRiu+5kr8c2vPYXVJgdJlvDA4w0sVWwkkhkUi0Xkc/nzLvgFyXbncj8G6VoF9zx8NHSB
      tgqbfQHRaBSrRx9B7cST6LdWkEln0DvSxxNPH0JayWwo3Qec8rstU4ckD+YN9Hq9Ae3YtZBK
      55jUyumqplsBRVFYb7PneVBVFarWRaFQGMzd4rrsmrOpCE6WB3MRlGQc11x3BR6683Gm5ixJ
      KVitFhMO2+yzt9ttAGCqE1sNQRAwOTUdukDbjVwuh6mcAsHqIplIDmTS0xnsmd+zqUtDiz+X
      Av77J1+FvVMSG9hRyPD4wh/9NCYyNlZXV1Gr1Ybm8G4HOI5jUuSiKCKfz2N6eprJltP7xmIx
      HD5pIpFIQJZlLD1dwd9+6u/hOz7q9TqazSZM08TU1NTQFPlRGIYBt69Cxsabw1Z+rtAAthn9
      fh/tdpsd04qiwLZtVCqVoQmUQTiOg0Ia+PJ/fDV+5qfn8eU/uR3TRQGZBPClT92GN75yD770
      J7fjkpmBHg7JFO4UyE2j0U6iKCIajTItHgpA8/k8ItFBv8OtN1yDWERmBnO6E0uSJGiWg1Zv
      c+HirUJoANsMov7SjFyapHg6GIaO//AbN+Lq/YNhD3tmkvjaZ1+Pr/3n1+GaAwPC2fxUAp/8
      P24BPGtosv1OgPL2NLeXUpij7goR6xKJBO579Ccw7cHnDg4Y3wiiKGLP3kswOz+/rZ8DCA1g
      R0CEMs/zmAIcVTypsjr8+Dj+6HOP4PCJNvvd3FQCBy45la6s1HR87NMPwucGfjSxTHcKRAc3
      DINJmdOYKUJ8TbwqnU7jiiuuYEkHqhOoqorumuzkbiE0gB0Az/NIJBLQNA37py/FpaW9aDVb
      mJqaYtPSg9wfSZJQbrh4+0e+g2OL3XWvt1LV8M7f/A6OLPQhyzJSqdRp1Sm2A+TmmKbJ+orJ
      v6fRSMQcrdVqWF1dZVo8VDfomG0Ygr5rspBAaAA7Blqgb3r56/Gv3vNrcCybjQztdDpDk1FO
      iXF5sJ31nVWOc+r3NO51p0W1qGHeckxc+lN7Bk3uHIdms4mFhQV0u12Iooh4PA7bUHFTqY+l
      pWVMXvUquJEsNE2D03dwdboExfeYrudOIzSAHQJNVL/jH/4Kv/O5P4DtOmwQRK/TwmqljG63
      i3g8DsdxkE9z+OqnXzvk9hDmp5P46p+9FvNTMnMndhK+77MpOJzP4/B9x9jsrtVaE5fe+i74
      0TwWFxcHkpFRBfceNSGIAuR4EoI0ECCeLE7hoSMLaBgmdF0fUpzbKYQGsEOgrIjFO2hqbciR
      geiWxLn4n7//dty0f4IFh55r4w9/80Zce8Wp2KBc1Ybcob0zSfzHf/dTMI2Nm8+3+7PQkIpU
      KoVMOjM02zeWyoNb0+TXNA3FYgmT07PYMz+PYz++E1bzJGsrnZiaghyJ7MriBxAWwnYSFPQm
      EomhieWHFhsw7cHPqqoikUzjU59/HFddnsPle9Io1zS8+6Pfhabb+KtPvwb792ZQqev4w88e
      RDK1O9pCrusy4hzxcCjYf+ybfwGe4xBPZRDNTaG6cBipZBKe52Hv3r1D8Q7NVBNFcUg0DMBQ
      NXy7XLzwBNhh0BfZ6/XQ6/WgGg5+74vfwxMnWiiVSkgkEigUCliqOnjvR7+L7z+0gvf/m3tw
      6LiKlZqN9/3re3DvA8v4+X97D545riORSO74Z6CdutFooNe30OqqaLVaaDQaA+ZnNIJsNoPp
      fQfwcx/6KBzXY4kA6nOg+9Dv93HJ1S+B64M1wHueh9XVVSyeOIGVhYVtPRlCOvQuoNPpYFpq
      oajwcFwfP1jwUCgUIEkSarUaKxaJogjfs+B6PKvEDtSWLYCTkE6nkc1md01V+vjx4/j53/4k
      Kiefw4++8RU4dh+veImCRtvGMyc4gOPh+j4Sseigir32GQm+76NcLsO0XfCcj/m5gcBVv99H
      tL+MjCzh0KqD4t69WyIQsBHCE2AXYNs2igqPv/qleVw3Gx2iGtimhZ9/xTtw7fyVgwBXiAxN
      m4xGo8jlJzAzM8NUJ3YDoigimUzim//tM7j/219n8ohXXhpHJjVwcSZKRUwWByNhN6JqUC+x
      LPLIBQxZlmUsaRE82eSQmpra1iA/jAF2Ca4HfPyuKmqqC8ex1/HogUHqlHg+NGSP5FJ2a+ET
      iNZRr1cHjfeTk+h2u/jsVwaCYal0DrVajUmqEGkvCJrAY5rmUD+AIAiYm5vbkc8RGsAuIJ/P
      44GyhR8s6DBNE4qisIBPlCV8+QdfAwDs2TPoctI0DYIgXHRjVimYJa1RUmiwbZspQMRkBxHe
      AidPrHNjiCpxJm7QdiI0gF0CFYlWV1fZoIh+v49IJIJSqYRIJMJEZNkUx13e9UcRiUTYKbW4
      uACRd2HaPGTBhmH4ADj0fQ+ezyMf37iHYTszPGeDi2c7GSPQgm4bBg68+51wRAEWgAPvegf8
      WAy1Wo1Nj6T5xefTMrjd4HkexWIRvmfjl96axe/+8gwun+fxn35nH978qixuvuJqgJNRmtxz
      UV4/EJ4Au4ZOp4MrPvh+TN1wPdJ75uGaJrKXXYp4sYDH//KLaLfbrA+XBGUvthOACH4c5yMe
      43HNfgV/9FuXwAegxHhU24Nm+O2UeLlQhCfALiGTyWDhnnthdjpIz88hd/llcPp9HP/uPbBN
      E3NTk9h/6T42APpimzBP4DgOsXgad363Dsf1IQgcmm0b3/5hCw1tIBB8sS5+IDSAXQEFfUaj
      Cb3eYL832x1o5VVwAHLZLNKpFNO8uVgXked50NUGfvMDg5rKybKBYk7CL79jErZlblv+fqsQ
      NsXvAnRdR2V1FVd94H0oXHkFXMuCa1mIZrNIzkyj8sijWFpeQXl1FVNTU5v2zl4M4DgOlu2h
      Wu9hqWLgs19ZQTIh4q7vt8DL+YtmKOBmuDjP1RcwfN8fuDWFAk78071ITE3g6a/+DRzTxDUf
      fD9O3HMvOM/D7Pz8OQtF7QY4jkOhUMCzJxt44qiFyel9+K93lpHN5tg8gosZoQHsMMj9kSQJ
      nZUyHvjTP4PgDqqkD/6nzwCWjVgsdtHvnEGQERD27Nmzi1dzbggNYIdBtAdSVpYAQBgYRiaT
      YcpmO1XwKpfL8BwdiVRhS+YRPN8QBsE7DCK5kdBVcNpMPB5nnJ+dgmnouPnaApMnHzeEJ8AO
      gxZ8cIgc6e3vBkoTU3j0kLpuiMa4IDSAHQYNfA6mNUnSZDdSnXTyjCtCF2iHQQKyQWrAxZzn
      f6EjPAF2EL7vo9frsSAYAJsfFmJ3EJ4AOwySDyEJkJ1UdAuxHqEB7CBc12XqaaSgoKrqriqj
      jTtCA9hBkJJCUCA2n8+H/v85gs1a3oKNIzSAHYQkSVAUhbk9G1GFTdNE0wtRjQAABSxJREFU
      tVqFYRi7dZnPC2xVf0FoADsInudh2zbi8fiGkx9938fq6iq46UlUKpVdvNKLG+czFWYzhAaw
      w+A4Dq1WixnAKBRFQefoMSiKsgtXN34I06A7jGg0im63C57nYZqn+PK0o+Xz+XVy6WfC6FjT
      EGeP8ATYYYiiiHQ6zSYo9vsXPgWF1KRDnDvCE2AXoCgKFEWBYRhssPSF4GJtl3w+IDwBdhHR
      aPSCF3+IC0NoACHGGqEBhBhrhAYQYqwRGkCIsUZoACHGGqEBhBhrhAZwkcL3/bC4tQMIDeAi
      A8mku64b1gh2AGEJ8SIBzQhotVoQBAGSJF30upovBIQGcBHA932oqgpVVdcNkgux9aB+DEEQ
      QgO4GOC6Ltrt9mCq+kWspb8T8H2ftYuK4sZTZS4U3W4XrutCFMXQAHYTFOQ2m83BzGBVZYPw
      xg10L2q1GprNJgBgcnIS6XT6vIyA2iZt24aiKGzELA0jp6GEoQHsIlzXRb/fR6MxmBGw07KI
      Fwso2O90Ouj1esxFqdfrbMIkcPb9Dq7rwrZtLC0twbZtNmXHdV021YYQGsAugtQh6AtJp9Nj
      p9JmWRZarRYMw4CmaUOpX9M0sbCwwITDaDSrLMsQRXFDBW3f91GtVtHpdJghmaY59PcgQgPY
      RfA8PxTwWpa1i1ezffB9n806pl3cNE2srq6i1+ud9rm2bTMNJWBwSgCDnoqZmRkAp2IF27ax
      sLAwtODPhPE7by8CGIaBWq22rthlGMYLSijL930YhoFOp4OFhQXmdzuOg4WFhTMu/tNB13Uc
      O3YMJ0+eZMPEG43GOS1+IDwBdhQUhHmeh2aziWg0iqWlJfb3aDR6UeT+aeGKosh216ChUqZG
      07TBjIO1U0wURQiCwAzbMAzmhwNApVKBZVmIxWJDu/r5XqPjOHBdF51OB51O55wXPxAawK6g
      2+3CcRw0Go2hgIyyFhT07RRocdPC1TQN5XIZoigiFoshGo0ynSKKWRzHYQuOjDYejyOdTsO2
      bfR6PRiGMfT5HMdBtVrdUiMnn/98ERrADsH3fdi2DcMw0G63AQCapg09hjIVOwmqQXQ6Hdi2
      zfx12mHPRqCLrrnX652VW3MxuXmhAZwHzleGRJKkMy6onSTA+b6PxcXFdYY4TggN4BxAu7ht
      29A0DRzHIZfLndWRTn70mXZIckO2sxpMu3y/3x97CcbQAM4Bvu/j5MmTQ8EW+cmSJMFxHMiy
      vG7xep4HTdNY6q5cLqPVam34+rqub1stgBZ+u91Go9G44ED0hYDQAM4BG1GUV1ZWAAzcG9d1
      kUqlkMlkmLSh53nQdZ352alUCoqibGgAALa1EkzBLfn6IcbYAEzThOM4bMGdjdiqKIooFots
      0QdBu2m73Uav18O+ffsgiiLa7Tba7TYcx4Ft2+h0Opu6TBzHrRPMvVAEF3qn03nBFtvOF2Nr
      AIZhYHFxkdERJElixCtya4D1ge7Z5Jpd18Vzzz2HWCwGy7LWuRqny4Jste9PqdVIJHJBhacX
      KsbWAAAMzcY1DIMtEJ7nIcsyFEXBxMQEewzHcUilUoy8djqQ338uoELSVkLTNFSrVeaihRjG
      WBvAZvA8j4nXUmHHdV2k0+ltbVMURZHl4LfqJCDCWBjwbozQAE4Dz/NQr9eZMTQajW3dRfv9
      PhYWFjAxMYFkMnlBQyCokLVZsB1igJAMdwZ0u10WOFLgvJ0gHvvy8vIF79rUZBNic4i33HLL
      bl9DiE0QjUaRzWbP+/mmabLuqhAb4/8HMHs0456/J5MAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Per Country' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Percentage ' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Story 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAACF0lEQVR4nO3TMQEAIAzAMMC/ztkAGRxNFPTpnpm7IOr8DoCfDECaAUgzAGkGIM0ApBmA
      NAOQZgDSDECaAUgzAGkGIM0ApBmANAOQZgDSDECaAUgzAGkGIM0ApBmANAOQZgDSDECaAUgz
      AGkGIM0ApBmANAOQZgDSDECaAUgzAGkGIM0ApBmANAOQZgDSDECaAUgzAGkGIM0ApBmANAOQ
      ZgDSDECaAUgzAGkGIM0ApBmANAOQZgDSDECaAUgzAGkGIM0ApBmANAOQZgDSDECaAUgzAGkG
      IM0ApBmANAOQZgDSDECaAUgzAGkGIM0ApBmANAOQZgDSDECaAUgzAGkGIM0ApBmANAOQZgDS
      DECaAUgzAGkGIM0ApBmANAOQZgDSDECaAUgzAGkGIM0ApBmANAOQZgDSDECaAUgzAGkGIM0A
      pBmANAOQZgDSDECaAUgzAGkGIM0ApBmANAOQZgDSDECaAUgzAGkGIM0ApBmANAOQZgDSDECa
      AUgzAGkGIM0ApBmANAOQZgDSDECaAUgzAGkGIM0ApBmANAOQZgDSDECaAUgzAGkGIM0ApBmA
      NAOQZgDSDECaAUgzAGkGIM0ApBmANAOQZgDSDECaAUgzAGkGIM0ApBmANAOQZgDSDECaAUgz
      AGkGIM0ApBmANAOQZgDSDECaAUgzAGkGIM0ApBmANAOQZgDSDECaAUgzAGkGIM0ApBmAtAdi
      XAUxE5ETqgAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
